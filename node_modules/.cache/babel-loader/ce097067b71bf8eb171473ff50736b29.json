{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/temporary/front-end/front-end-nc-news/nc-news-app/src/Components/CommentsList.jsx\";\nimport React from 'react';\nimport { getComments } from '../API';\nimport CommentBox from './CommentBox';\n\nclass CommentsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments_list: [],\n      isLoading: true,\n      userName: 'tickle122'\n    };\n\n    this.fetchComments = () => {\n      const {\n        article_id\n      } = this.props;\n      getComments(article_id).then(comments => {\n        this.setState({\n          comments_list: comments,\n          isLoading: false\n        });\n      });\n    };\n\n    this.addComment = props => {\n      console.log(props);\n    };\n  }\n\n  render() {\n    if (this.state.isLoading === true) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Loading....\");\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.state.comments_list.map(comment => {\n      return React.createElement(\"label\", {\n        key: comment.comment_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"User: \", comment.author, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), \"Comment: \", comment.body, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), \"Votes: \", comment.votes, \" Created at: \", comment.created_at, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })));\n    }), React.createElement(CommentBox, {\n      article_id: this.props.article_id,\n      userName: this.state.userName,\n      addComment: this.addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.article_id !== prevProps.article_id) this.fetchComments();\n  }\n\n  componentDidMount() {\n    this.fetchComments();\n  }\n\n}\n\nexport default CommentsList;","map":{"version":3,"sources":["/Users/user1/Desktop/temporary/front-end/front-end-nc-news/nc-news-app/src/Components/CommentsList.jsx"],"names":["React","getComments","CommentBox","CommentsList","Component","state","comments_list","isLoading","userName","fetchComments","article_id","props","then","comments","setState","addComment","console","log","render","map","comment","comment_id","author","body","votes","created_at","componentDidUpdate","prevProps","componentDidMount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACPC,MAAAA,aAAa,EAAE,EADR;AAEPC,MAAAA,SAAS,EAAE,IAFJ;AAGPC,MAAAA,QAAQ,EAAE;AAHH,KADkC;;AAAA,SA4C1CC,aA5C0C,GA4C1B,MAAM;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAiB,KAAKC,KAA5B;AACAV,MAAAA,WAAW,CAACS,UAAD,CAAX,CAAwBE,IAAxB,CAA8BC,QAAD,IAAc;AAC1C,aAAKC,QAAL,CAAc;AAAER,UAAAA,aAAa,EAAEO,QAAjB;AAA2BN,UAAAA,SAAS,EAAE;AAAtC,SAAd;AACA,OAFD;AAGA,KAjDyC;;AAAA,SAmD1CQ,UAnD0C,GAmD5BJ,KAAD,IAAW;AACvBK,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,KArDyC;AAAA;;AAO1CO,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKb,KAAL,CAAWE,SAAX,KAAyB,IAA7B,EAAmC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACnC,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKF,KAAL,CAAWC,aAAX,CAAyBa,GAAzB,CAA8BC,OAAD,IAAa;AAC1C,aACC;AAAO,QAAA,GAAG,EAAEA,OAAO,CAACC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQD,OAAO,CAACE,MADhB,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,eAIWF,OAAO,CAACG,IAJnB,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,aAOSH,OAAO,CAACI,KAPjB,mBAOqCJ,OAAO,CAACK,UAP7C,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARD,EASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATD,CADD,CADD;AAeA,KAhBA,CADF,EAkBC,oBAAC,UAAD;AACC,MAAA,UAAU,EAAE,KAAKd,KAAL,CAAWD,UADxB;AAEC,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWG,QAFtB;AAGC,MAAA,UAAU,EAAE,KAAKO,UAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBD,CADD;AA0BA;;AAEDW,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC7B,QAAI,KAAKhB,KAAL,CAAWD,UAAX,KAA0BiB,SAAS,CAACjB,UAAxC,EAAoD,KAAKD,aAAL;AACpD;;AACDmB,EAAAA,iBAAiB,GAAG;AACnB,SAAKnB,aAAL;AACA;;AA1CyC;;AAwD3C,eAAeN,YAAf","sourcesContent":["import React from 'react';\nimport { getComments } from '../API';\nimport CommentBox from './CommentBox';\n\nclass CommentsList extends React.Component {\n\tstate = {\n\t\tcomments_list: [],\n\t\tisLoading: true,\n\t\tuserName: 'tickle122'\n\t};\n\n\trender() {\n\t\tif (this.state.isLoading === true) return <p>Loading....</p>;\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t{this.state.comments_list.map((comment) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<label key={comment.comment_id}>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tUser: {comment.author}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\tComment: {comment.body}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\tVotes: {comment.votes} Created at: {comment.created_at}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<CommentBox\n\t\t\t\t\tarticle_id={this.props.article_id}\n\t\t\t\t\tuserName={this.state.userName}\n\t\t\t\t\taddComment={this.addComment}\n\t\t\t\t/>\n\t\t\t</main>\n\t\t);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.article_id !== prevProps.article_id) this.fetchComments();\n\t}\n\tcomponentDidMount() {\n\t\tthis.fetchComments();\n\t}\n\n\tfetchComments = () => {\n\t\tconst { article_id } = this.props;\n\t\tgetComments(article_id).then((comments) => {\n\t\t\tthis.setState({ comments_list: comments, isLoading: false });\n\t\t});\n\t};\n\n\taddComment = (props) => {\n\t\tconsole.log(props);\n\t};\n}\n\nexport default CommentsList;\n"]},"metadata":{},"sourceType":"module"}
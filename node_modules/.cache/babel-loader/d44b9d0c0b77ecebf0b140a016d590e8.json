{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/temporary/front-end/front-end-nc-news/nc-news-app/src/Components/CommentsList.jsx\";\nimport React from 'react';\nimport { getComments, postComment, deleteComment, incrementVotes } from '../API';\nimport CommentBox from './CommentBox';\nimport CommentCard from './CommentCard';\n\nclass CommentsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments_list: [],\n      isLoading: true,\n      userName: 'tickle122',\n      err: null\n    };\n\n    this.fetchComments = () => {\n      const {\n        article_id\n      } = this.props;\n      getComments(article_id).then(comments => {\n        this.setState({\n          comments_list: comments,\n          isLoading: false\n        });\n      }).catch(err => {\n        this.setState({\n          err: err.response,\n          isLoading: false\n        });\n      });\n    };\n\n    this.addComment = ({\n      inputValue\n    }) => {\n      postComment(this.props.article_id, inputValue, this.state.userName).then(comment => {\n        this.setState(currentState => {\n          const newCommentsList = [...currentState.comments_list, comment];\n          return {\n            comments_list: newCommentsList\n          };\n        });\n      });\n    };\n\n    this.removeComment = event => {\n      const comment_id = event.target.value;\n      deleteComment(comment_id).then(comment => {\n        this.setState(currentState => {\n          return {\n            comments_list: [...currentState.comments_list, comment]\n          };\n        });\n      });\n    };\n\n    this.voteUp = event => {\n      const incrementDirection = event.target.name;\n      const comment_id = event.target.value;\n      incrementVotes(incrementDirection, comment_id);\n    };\n\n    this.voteDown = event => {\n      const incrementDirection = event.target.name;\n      const comment_id = event.target.value;\n      incrementVotes(incrementDirection, comment_id);\n    };\n  }\n\n  render() {\n    if (this.state.isLoading === true) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Loading....\");\n    return React.createElement(\"main\", {\n      key: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(CommentBox, {\n      key: \"comment box\",\n      article_id: this.props.article_id,\n      userName: this.state.userName,\n      addComment: this.addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(CommentCard, {\n      key: \"comment card\",\n      comments_list: this.state.comments_list,\n      addComment: this.addComment,\n      removeComment: this.removeComment,\n      voteUp: this.voteUp,\n      voteDown: this.voteDown,\n      userName: this.state.userName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.comments_list[this.state.comments_list.length - 1] === 'comment deleted') this.fetchComments();\n    if (this.state.comments_list.length !== prevState.comments_list.length) this.fetchComments();\n    if (this.props.article_id !== prevProps.article_id) this.fetchComments();\n  }\n\n  componentDidMount() {\n    this.fetchComments();\n  }\n\n}\n\nexport default CommentsList;","map":{"version":3,"sources":["/Users/user1/Desktop/temporary/front-end/front-end-nc-news/nc-news-app/src/Components/CommentsList.jsx"],"names":["React","getComments","postComment","deleteComment","incrementVotes","CommentBox","CommentCard","CommentsList","Component","state","comments_list","isLoading","userName","err","fetchComments","article_id","props","then","comments","setState","catch","response","addComment","inputValue","comment","currentState","newCommentsList","removeComment","event","comment_id","target","value","voteUp","incrementDirection","name","voteDown","render","componentDidUpdate","prevProps","prevState","length","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { getComments, postComment, deleteComment, incrementVotes } from '../API';\nimport CommentBox from './CommentBox';\nimport CommentCard from './CommentCard';\n\nclass CommentsList extends React.Component {\n\tstate = {\n\t\tcomments_list: [],\n\t\tisLoading: true,\n\t\tuserName: 'tickle122',\n\t\terr: null\n\t};\n\n\trender() {\n\t\tif (this.state.isLoading === true) return <p>Loading....</p>;\n\t\treturn (\n\t\t\t<main key=\"main\">\n\t\t\t\t<CommentBox\n\t\t\t\t\tkey=\"comment box\"\n\t\t\t\t\tarticle_id={this.props.article_id}\n\t\t\t\t\tuserName={this.state.userName}\n\t\t\t\t\taddComment={this.addComment}\n\t\t\t\t/>\n\t\t\t\t<CommentCard\n\t\t\t\t\tkey=\"comment card\"\n\t\t\t\t\tcomments_list={this.state.comments_list}\n\t\t\t\t\taddComment={this.addComment}\n\t\t\t\t\tremoveComment={this.removeComment}\n\t\t\t\t\tvoteUp={this.voteUp}\n\t\t\t\t\tvoteDown={this.voteDown}\n\t\t\t\t\tuserName={this.state.userName}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t</main>\n\t\t);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (this.state.comments_list[this.state.comments_list.length - 1] === 'comment deleted') this.fetchComments();\n\t\tif (this.state.comments_list.length !== prevState.comments_list.length) this.fetchComments();\n\t\tif (this.props.article_id !== prevProps.article_id) this.fetchComments();\n\t}\n\tcomponentDidMount() {\n\t\tthis.fetchComments();\n\t}\n\n\tfetchComments = () => {\n\t\tconst { article_id } = this.props;\n\t\tgetComments(article_id)\n\t\t\t.then((comments) => {\n\t\t\t\tthis.setState({ comments_list: comments, isLoading: false });\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthis.setState({ err: err.response, isLoading: false });\n\t\t\t});\n\t};\n\n\taddComment = ({ inputValue }) => {\n\t\tpostComment(this.props.article_id, inputValue, this.state.userName).then((comment) => {\n\t\t\tthis.setState((currentState) => {\n\t\t\t\tconst newCommentsList = [ ...currentState.comments_list, comment ];\n\t\t\t\treturn { comments_list: newCommentsList };\n\t\t\t});\n\t\t});\n\t};\n\n\tremoveComment = (event) => {\n\t\tconst comment_id = event.target.value;\n\t\tdeleteComment(comment_id).then((comment) => {\n\t\t\tthis.setState((currentState) => {\n\t\t\t\treturn { comments_list: [ ...currentState.comments_list, comment ] };\n\t\t\t});\n\t\t});\n\t};\n\tvoteUp = (event) => {\n\t\tconst incrementDirection = event.target.name;\n\t\tconst comment_id = event.target.value;\n\t\tincrementVotes(incrementDirection, comment_id);\n\t};\n\n\tvoteDown = (event) => {\n\t\tconst incrementDirection = event.target.name;\n\t\tconst comment_id = event.target.value;\n\t\tincrementVotes(incrementDirection, comment_id);\n\t};\n}\n\nexport default CommentsList;\n"]},"metadata":{},"sourceType":"module"}
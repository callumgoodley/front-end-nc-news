{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/temporary/front-end/front-end-nc-news/nc-news-app/src/Components/ArticlesList.jsx\";\nimport React from 'react';\nimport { getArticles } from '../API';\n\nclass ArticlesList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles_list: [],\n      isLoading: true\n    };\n\n    this.fetchArticles = () => {\n      const {\n        topic,\n        sort_by,\n        article_id\n      } = this.props;\n      getArticles(topic, sort_by, article_id).then(articles => {\n        this.setState({\n          articles_list: articles,\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    if (this.state.isLoading === true) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Loading....\");\n    console.log([...this.state.articles_list]); // console.log('props', this.props);\n    // console.log('articles', this.state.articles_list);\n    // if (this.props.article_id)\n\n    const array = [this.state.articles_list];\n    return this.state.array.map(article => {\n      return React.createElement(\"label\", {\n        key: article.article_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, article.title, \" comments: \", article.comment_count, \", created at:\", article.created_at, \", votes:\", article.votes), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.sort_by !== prevProps.sort_by) this.fetchArticles();\n    if (this.props.topic !== prevProps.topic) this.fetchArticles();\n  }\n\n  componentDidMount() {\n    this.fetchArticles();\n  }\n\n}\n\nexport default ArticlesList;","map":{"version":3,"sources":["/Users/user1/Desktop/temporary/front-end/front-end-nc-news/nc-news-app/src/Components/ArticlesList.jsx"],"names":["React","getArticles","ArticlesList","Component","state","articles_list","isLoading","fetchArticles","topic","sort_by","article_id","props","then","articles","setState","render","console","log","array","map","article","title","comment_count","created_at","votes","componentDidUpdate","prevProps","componentDidMount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACPC,MAAAA,aAAa,EAAE,EADR;AAEPC,MAAAA,SAAS,EAAE;AAFJ,KADkC;;AAAA,SAkC1CC,aAlC0C,GAkC1B,MAAM;AACrB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,OAAT;AAAkBC,QAAAA;AAAlB,UAAiC,KAAKC,KAA5C;AACAV,MAAAA,WAAW,CAACO,KAAD,EAAQC,OAAR,EAAiBC,UAAjB,CAAX,CAAwCE,IAAxC,CAA8CC,QAAD,IAAc;AAC1D,aAAKC,QAAL,CAAc;AAAET,UAAAA,aAAa,EAAEQ,QAAjB;AAA2BP,UAAAA,SAAS,EAAE;AAAtC,SAAd;AACA,OAFD;AAGA,KAvCyC;AAAA;;AAM1CS,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKX,KAAL,CAAWE,SAAX,KAAyB,IAA7B,EAAmC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACnCU,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAE,GAAG,KAAKb,KAAL,CAAWC,aAAhB,CAAZ,EAFQ,CAGR;AACA;AACA;;AACA,UAAMa,KAAK,GAAG,CAAE,KAAKd,KAAL,CAAWC,aAAb,CAAd;AACA,WAAO,KAAKD,KAAL,CAAWc,KAAX,CAAiBC,GAAjB,CAAsBC,OAAD,IAAa;AACxC,aACC;AAAO,QAAA,GAAG,EAAEA,OAAO,CAACV,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEU,OAAO,CAACC,KADV,iBAC4BD,OAAO,CAACE,aADpC,mBACgEF,OAAO,CAACG,UADxE,cAEEH,OAAO,CAACI,KAFV,CADD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALD,CADD;AASA,KAVM,CAAP;AAWA;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC7B,QAAI,KAAKf,KAAL,CAAWF,OAAX,KAAuBiB,SAAS,CAACjB,OAArC,EAA8C,KAAKF,aAAL;AAC9C,QAAI,KAAKI,KAAL,CAAWH,KAAX,KAAqBkB,SAAS,CAAClB,KAAnC,EAA0C,KAAKD,aAAL;AAC1C;;AAEDoB,EAAAA,iBAAiB,GAAG;AACnB,SAAKpB,aAAL;AACA;;AAhCyC;;AA0C3C,eAAeL,YAAf","sourcesContent":["import React from 'react';\nimport { getArticles } from '../API';\n\nclass ArticlesList extends React.Component {\n\tstate = {\n\t\tarticles_list: [],\n\t\tisLoading: true\n\t};\n\n\trender() {\n\t\tif (this.state.isLoading === true) return <p>Loading....</p>;\n\t\tconsole.log([ ...this.state.articles_list ]);\n\t\t// console.log('props', this.props);\n\t\t// console.log('articles', this.state.articles_list);\n\t\t// if (this.props.article_id)\n\t\tconst array = [ this.state.articles_list ];\n\t\treturn this.state.array.map((article) => {\n\t\t\treturn (\n\t\t\t\t<label key={article.article_id}>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{article.title} comments: {article.comment_count}, created at:{article.created_at}, votes:\n\t\t\t\t\t\t{article.votes}\n\t\t\t\t\t</li>\n\t\t\t\t\t<br />\n\t\t\t\t</label>\n\t\t\t);\n\t\t});\n\t}\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.sort_by !== prevProps.sort_by) this.fetchArticles();\n\t\tif (this.props.topic !== prevProps.topic) this.fetchArticles();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchArticles();\n\t}\n\n\tfetchArticles = () => {\n\t\tconst { topic, sort_by, article_id } = this.props;\n\t\tgetArticles(topic, sort_by, article_id).then((articles) => {\n\t\t\tthis.setState({ articles_list: articles, isLoading: false });\n\t\t});\n\t};\n}\n\nexport default ArticlesList;\n"]},"metadata":{},"sourceType":"module"}
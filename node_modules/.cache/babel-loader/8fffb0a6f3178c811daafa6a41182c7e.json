{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/temporary/front-end/front-end-nc-news/nc-news-app/src/Components/CommentsList.jsx\";\nimport React from 'react';\nimport { getComments } from '../API';\n\nclass CommentsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments_list: [],\n      isLoading: true\n    };\n\n    this.fetchComments = () => {\n      const {\n        article_id\n      } = this.props;\n      getComments(article_id).then(comments => {\n        this.setState({\n          comments_list: comments,\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    if (this.state.isLoading === true) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Loading....\");\n    return this.state.comments_list.map(comment => {\n      return React.createElement(\"label\", {\n        key: comment.comment_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, comment.author, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), \"comment: \", comment.body));\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.article_id !== prevProps.article_id) this.fecthComments();\n  }\n\n  componentDidMount() {\n    this.fetchComments();\n  }\n\n}\n\nexport default CommentsList;","map":{"version":3,"sources":["/Users/user1/Desktop/temporary/front-end/front-end-nc-news/nc-news-app/src/Components/CommentsList.jsx"],"names":["React","getComments","CommentsList","Component","state","comments_list","isLoading","fetchComments","article_id","props","then","comments","setState","render","map","comment","comment_id","author","body","componentDidUpdate","prevProps","fecthComments","componentDidMount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACPC,MAAAA,aAAa,EAAE,EADR;AAEPC,MAAAA,SAAS,EAAE;AAFJ,KADkC;;AAAA,SA4B1CC,aA5B0C,GA4B1B,MAAM;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAiB,KAAKC,KAA5B;AACAR,MAAAA,WAAW,CAACO,UAAD,CAAX,CAAwBE,IAAxB,CAA8BC,QAAD,IAAc;AAC1C,aAAKC,QAAL,CAAc;AAAEP,UAAAA,aAAa,EAAEM,QAAjB;AAA2BL,UAAAA,SAAS,EAAE;AAAtC,SAAd;AACA,OAFD;AAGA,KAjCyC;AAAA;;AAM1CO,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKT,KAAL,CAAWE,SAAX,KAAyB,IAA7B,EAAmC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACnC,WAAO,KAAKF,KAAL,CAAWC,aAAX,CAAyBS,GAAzB,CAA8BC,OAAD,IAAa;AAChD,aACC;AAAO,QAAA,GAAG,EAAEA,OAAO,CAACC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACED,OAAO,CAACE,MADV,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,eAGWF,OAAO,CAACG,IAHnB,CADD,CADD;AASA,KAVM,CAAP;AAWA;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC7B,QAAI,KAAKX,KAAL,CAAWD,UAAX,KAA0BY,SAAS,CAACZ,UAAxC,EAAoD,KAAKa,aAAL;AACpD;;AACDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKf,aAAL;AACA;;AA1ByC;;AAoC3C,eAAeL,YAAf","sourcesContent":["import React from 'react';\nimport { getComments } from '../API';\n\nclass CommentsList extends React.Component {\n\tstate = {\n\t\tcomments_list: [],\n\t\tisLoading: true\n\t};\n\n\trender() {\n\t\tif (this.state.isLoading === true) return <p>Loading....</p>;\n\t\treturn this.state.comments_list.map((comment) => {\n\t\t\treturn (\n\t\t\t\t<label key={comment.comment_id}>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{comment.author}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tcomment: {comment.body}\n\t\t\t\t\t</li>\n\t\t\t\t</label>\n\t\t\t);\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.article_id !== prevProps.article_id) this.fecthComments();\n\t}\n\tcomponentDidMount() {\n\t\tthis.fetchComments();\n\t}\n\n\tfetchComments = () => {\n\t\tconst { article_id } = this.props;\n\t\tgetComments(article_id).then((comments) => {\n\t\t\tthis.setState({ comments_list: comments, isLoading: false });\n\t\t});\n\t};\n}\n\nexport default CommentsList;\n"]},"metadata":{},"sourceType":"module"}